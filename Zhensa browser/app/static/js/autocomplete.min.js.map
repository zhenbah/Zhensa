{"version":3,"file":"autocomplete.min.js","names":["res: Response","timeoutId: number","searchHistory: string[]","autocomplete: HTMLElement | null","autocompleteList: HTMLUListElement | null"],"sources":["../../../../../Zhensa browser/app/src/js/main/autocomplete.ts"],"sourcesContent":["// SPDX-License-Identifier: MIT\n\nimport { assertElement, http, listen, settings } from \"../core/toolkit.ts\";\n\nconst fetchResults = async (qInput: HTMLInputElement, query: string): Promise<void> => {\n  try {\n    let res: Response;\n\n    if (settings.method === \"GET\") {\n      res = await http(\"GET\", `./autocompleter?q=${query}`);\n    } else {\n      res = await http(\"POST\", \"./autocompleter\", { body: new URLSearchParams({ q: query }) });\n    }\n\n    const results = await res.json();\n\n    const autocomplete = document.querySelector<HTMLElement>(\".autocomplete\");\n    assertElement(autocomplete);\n\n    const autocompleteList = document.querySelector<HTMLUListElement>(\".autocomplete ul\");\n    assertElement(autocompleteList);\n\n    autocomplete.classList.add(\"open\");\n    autocompleteList.replaceChildren();\n\n    // show an error message that no result was found\n    if (results?.[1]?.length === 0) {\n      const noItemFoundMessage = Object.assign(document.createElement(\"li\"), {\n        className: \"no-item-found\",\n        textContent: settings.translations?.no_item_found ?? \"No results found\"\n      });\n      autocompleteList.append(noItemFoundMessage);\n      return;\n    }\n\n    const fragment = new DocumentFragment();\n\n    for (const result of results[1]) {\n      const li = Object.assign(document.createElement(\"li\"), { textContent: result });\n\n      listen(\"mousedown\", li, () => {\n        qInput.value = result;\n\n        const form = document.querySelector<HTMLFormElement>(\"#search\");\n        form?.submit();\n\n        autocomplete.classList.remove(\"open\");\n      });\n\n      fragment.append(li);\n    }\n\n    autocompleteList.append(fragment);\n  } catch (error) {\n    console.error(\"Error fetching autocomplete results:\", error);\n  }\n};\n\nconst qInput = document.getElementById(\"q\") as HTMLInputElement | null;\nassertElement(qInput);\n\nlet timeoutId: number;\n\n// Search history and trending functionality\nconst searchHistory: string[] = [];\nconst MAX_HISTORY = 10;\n\nconst trendingSearches = [\n  \"artificial intelligence\",\n  \"machine learning\",\n  \"web development\",\n  \"python programming\",\n  \"data science\",\n  \"cryptocurrency\",\n  \"climate change\",\n  \"electric vehicles\",\n  \"remote work\",\n  \"blockchain technology\"\n];\n\nfunction saveSearchHistory(query: string) {\n  if (!query.trim()) return;\n\n  // Remove if already exists\n  const index = searchHistory.indexOf(query);\n  if (index > -1) {\n    searchHistory.splice(index, 1);\n  }\n\n  // Add to beginning\n  searchHistory.unshift(query);\n\n  // Keep only max items\n  if (searchHistory.length > MAX_HISTORY) {\n    searchHistory.splice(MAX_HISTORY);\n  }\n\n  // Save to localStorage\n  localStorage.setItem('zhensa_search_history', JSON.stringify(searchHistory));\n}\n\nfunction loadSearchHistory(): string[] {\n  try {\n    const stored = localStorage.getItem('zhensa_search_history');\n    return stored ? JSON.parse(stored) : [];\n  } catch {\n    return [];\n  }\n}\n\nfunction removeHistoryItem(index: number) {\n  const history = loadSearchHistory();\n  if (index >= 0 && index < history.length) {\n    history.splice(index, 1);\n    localStorage.setItem('zhensa_search_history', JSON.stringify(history));\n    // Refresh the suggestions\n    showSearchSuggestions();\n  }\n}\n\nfunction clearAllHistory() {\n  localStorage.removeItem('zhensa_search_history');\n  searchHistory.length = 0;\n  // Refresh the suggestions\n  showSearchSuggestions();\n}\n\nfunction showSearchSuggestions() {\n  const suggestionsDiv = document.querySelector('.search-suggestions') as HTMLElement;\n  const historyList = document.getElementById('history-list') as HTMLUListElement;\n  const trendingList = document.getElementById('trending-list') as HTMLUListElement;\n\n  if (!suggestionsDiv || !historyList || !trendingList) return;\n\n  // Clear existing content\n  historyList.innerHTML = '';\n  trendingList.innerHTML = '';\n\n  // Load and display history\n  const history = loadSearchHistory();\n  if (history.length > 0) {\n    history.forEach((query, index) => {\n      const li = document.createElement('li');\n\n      // Create text span\n      const textSpan = document.createElement('span');\n      textSpan.textContent = query;\n      textSpan.className = 'history-text';\n\n      // Create delete button\n      const deleteBtn = document.createElement('button');\n      deleteBtn.className = 'delete-history-item';\n      deleteBtn.textContent = 'Ã—';\n      deleteBtn.title = 'Remove from history';\n      deleteBtn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        removeHistoryItem(index);\n      });\n\n      li.appendChild(textSpan);\n      li.appendChild(deleteBtn);\n\n      li.addEventListener('click', () => {\n        qInput!.value = query;\n        saveSearchHistory(query);\n        hideSearchSuggestions();\n        const form = document.querySelector('#search') as HTMLFormElement;\n        form?.submit();\n      });\n      historyList.appendChild(li);\n    });\n    suggestionsDiv.classList.add('show');\n  }\n\n  // Display trending searches\n  trendingSearches.forEach(query => {\n    const li = document.createElement('li');\n    li.textContent = query;\n    li.addEventListener('click', () => {\n      qInput!.value = query;\n      saveSearchHistory(query);\n      hideSearchSuggestions();\n      const form = document.querySelector('#search') as HTMLFormElement;\n      form?.submit();\n    });\n    trendingList.appendChild(li);\n  });\n\n  if (history.length > 0 || trendingSearches.length > 0) {\n    suggestionsDiv.classList.add('show');\n  }\n}\n\nfunction hideSearchSuggestions() {\n  const suggestionsDiv = document.querySelector('.search-suggestions') as HTMLElement;\n  if (suggestionsDiv) {\n    suggestionsDiv.classList.remove('show');\n  }\n}\n\n// Initialize search history from localStorage\nsearchHistory.push(...loadSearchHistory());\n\n// Focus/blur events for search suggestions\nlisten(\"focus\", qInput, () => {\n  if (qInput!.value.length === 0) {\n    showSearchSuggestions();\n  }\n});\n\nlisten(\"blur\", qInput, () => {\n  // Delay hiding to allow click events on suggestions\n  setTimeout(() => {\n    hideSearchSuggestions();\n  }, 150);\n});\n\n// Save search history when form is submitted\nconst searchForm = document.getElementById(\"search\") as HTMLFormElement;\nif (searchForm) {\n  listen(\"submit\", searchForm, () => {\n    const query = qInput!.value.trim();\n    if (query) {\n      saveSearchHistory(query);\n    }\n  });\n}\n\n// Clear all history button\nconst clearHistoryBtn = document.getElementById(\"clear-history\");\nif (clearHistoryBtn) {\n  listen(\"click\", clearHistoryBtn, (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    clearAllHistory();\n  });\n}\n\nlisten(\"input\", qInput, () => {\n  clearTimeout(timeoutId);\n\n  const query = qInput.value;\n  const minLength = settings.autocomplete_min ?? 2;\n\n  if (query.length < minLength) {\n    // Hide autocomplete when input is too short\n    const autocomplete = document.querySelector<HTMLElement>(\".autocomplete\");\n    if (autocomplete) {\n      autocomplete.classList.remove(\"open\");\n    }\n    // Show search suggestions when input is empty\n    if (query.length === 0) {\n      showSearchSuggestions();\n    } else {\n      hideSearchSuggestions();\n    }\n    return;\n  }\n\n  // Hide search suggestions when user starts typing\n  hideSearchSuggestions();\n\n  timeoutId = window.setTimeout(async () => {\n    if (query === qInput.value) {\n      await fetchResults(qInput, query);\n    }\n  }, 0);\n});\n\nconst autocomplete: HTMLElement | null = document.querySelector<HTMLElement>(\".autocomplete\");\nconst autocompleteList: HTMLUListElement | null = document.querySelector<HTMLUListElement>(\".autocomplete ul\");\nif (autocompleteList) {\n  listen(\"keyup\", qInput, (event: KeyboardEvent) => {\n    const listItems = [...autocompleteList.children] as HTMLElement[];\n\n    const currentIndex = listItems.findIndex((item) => item.classList.contains(\"active\"));\n    let newCurrentIndex = -1;\n\n    switch (event.key) {\n      case \"ArrowUp\": {\n        const currentItem = listItems[currentIndex];\n        if (currentItem && currentIndex >= 0) {\n          currentItem.classList.remove(\"active\");\n        }\n        // we need to add listItems.length to the index calculation here because the JavaScript modulos\n        // operator doesn't work with negative numbers\n        newCurrentIndex = (currentIndex - 1 + listItems.length) % listItems.length;\n        break;\n      }\n      case \"ArrowDown\": {\n        const currentItem = listItems[currentIndex];\n        if (currentItem && currentIndex >= 0) {\n          currentItem.classList.remove(\"active\");\n        }\n        newCurrentIndex = (currentIndex + 1) % listItems.length;\n        break;\n      }\n      case \"Tab\":\n      case \"Enter\":\n        if (autocomplete) {\n          autocomplete.classList.remove(\"open\");\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (newCurrentIndex !== -1) {\n      const selectedItem = listItems[newCurrentIndex];\n      if (selectedItem) {\n        selectedItem.classList.add(\"active\");\n\n        if (!selectedItem.classList.contains(\"no-item-found\")) {\n          const qInput = document.getElementById(\"q\") as HTMLInputElement | null;\n          if (qInput) {\n            qInput.value = selectedItem.textContent ?? \"\";\n          }\n        }\n      }\n    }\n  });\n}\n"],"mappings":"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"}